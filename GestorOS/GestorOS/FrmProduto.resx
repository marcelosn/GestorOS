<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAdicionarUnidade.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnSalvar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAH2SURBVFhH7dfNS1RRHMbx2WkiGIgvkC8Yim1cRDup
        nSBtVDShIIlATRBp286tK4NI3OrCRE3diAglKtimNuH/EP4TiX6fYX5w5npf5pyZURc+8GHAmXPOM869
        596bI4v4gf0EB9D7IX7iOx4jMX9xWWXfUIPYnCJukNnDGMYTvMNHzBVeP0B/15gN2DybqMO1ZBVYQFpe
        4Rz/Cq/LsHyCO5cK1aIoWQV0jKRF39j9/C4s83DfkzUU/SfKLTAF9/M66CxxBWQLD5DPbRSQddSj7ALT
        cD+/A0taAVlB2QUmcYH/hVcd7ZasAn9QdoEWvEA/nuMJLFkFfiGzQNZpmJboaRhVUgFtRKOIbkBZNMbd
        iOKUVKCa7gvc3QK6oIQceEk0l07n6DqJBSZQ6Ywguk5iAe3vlg68xKAnjemF5TWi65RUYAC6hK560hgt
        agku0IAedHvSmEZYggsM4RhxN51pNMadJ7iAbhxa0exJY/LX+0KCC+jo/Y0jTxozA0twAX2LTrR70piH
        sAQX0Cml2yxd2Xxs4y0swQWa8AxPPWnMI1iCC+hu5yu+eFrCMCxeBd7D0gVtzW88aUwfLHqAia6TWEC3
        Um3QQ6UOKP0MIfQTaA7NNYvoOvkCN/FwmuQM+cukdi73kVyP1SfQblYJmusQ7hqsmft8BaiOdMVzSL6E
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnCancelar.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAL5SURBVFhHrddpyExRHMfxa4ks2ZNkeYmkZAkhssuS
        iFLe6JF31izZFbK+kUIilJAXylZeCCEpkhJCSiIlZcmW/fubZ/7Tf85z7txnnplffWo699xz5957/ufM
        JGWmJQZhEY7gKq7hGJZiCFqj6tHAe/EEP/EvxS88x36MQMXpjVModdE0f3AW/dGgzMUbxAaXH/iID/ie
        b4t5jxqUlc2IDfYIOzADfdE1rw+mYSseIHbuLjRCZjYhPPkF5kGTMCvNMQuaL+E4e1AycxCedBrdUG46
        Q5USjrcA0fTCO/jOO1FpNsKP+QkDUCea7b7jGVQrh+HHvoSiDIQvtZfogmqlHR7Dxv+LUShEi4wdFE24
        WCZjee3HaJZhSu3HOpkKfw2tnrm0wFPYAc1etYXRAKp79VGZhrHq0TueroYgTXAXdp3X0JNJBkOrlh3Y
        jlhWw/qIat6yBf7YWsSyBr7feCSLXYPEvr1lG3zfVVgZtKXdgDIa/mZzN3HUNWh51QpXKipN6x/ajVLp
        gc+w/ueRXHcNesdaWrOyDnaO2YCs6J37/eUWkhuuQRtLfb6AHr1Kyc7TZ82RrLSFJp+dl/sCx12DXoE2
        llIJJ5znJ2Ys3aEqsf4XkatdP0haHSvhRqXHvj5oi5WoZST8JNTOmgyFb9QdxrIC1kf8hAsnpl5RLGHF
        TELSCtpurfEhmiGMttgvUJ9YqVmJfsVsNQRpjNuw67xFB+RyAHZAdLFYZkIVkBYtQGnnatHxT/okChmG
        37CDz1D4dlWInvJ92PgyAUXRD0jfQdVRreyDH/sK9EqK0g9aB3xHzfpKE068b9DEj2Y+fGc5hE4oN20Q
        bvOyBCWjX6/hSaoMbcdNkRU9Wr3fewjHOYjM6Kezajw8We5AM30sekJru2iT0U6n+tfyGjtX/5Zi5Z2a
        hQjnhKddTRuL1nYtr35v8LQuaLVtUPRH9AJiA9fHZQxHxRkD/YZ7hbQ7NXoqJzARVU97jIP2i3O4maen
        pOVZa3tH1DNJ8h99PoBhWJ9bUgAAAABJRU5ErkJggg==
</value>
  </data>
</root>